var child_process = require("child_process");
var Promise = require("bluebird");
module.exports = function (e) {
    return new Promise(function (resolve, reject) {
        var callbacked = false;
        var timo = setTimeout(function () {
            if (!callbacked) {
                reject("timeout error");
            }
        }, 20000);
        child_process.exec(__dirname + "/../scripts/linux/network.sh", function (error, stdout, stderr) {
            callbacked = true;
            clearTimeout(timo);
            if (error && error !== null) {
                reject(error);
            }
            else if (stderr) {
                reject(stderr);
            }
            else {
                resolve(JSON.parse(stdout + ""));
            }
        });
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFZLGFBQWEsV0FBTSxlQUFlLENBQUMsQ0FBQTtBQUMvQyxJQUFZLE9BQU8sV0FBTSxVQUFVLENBQUMsQ0FBQTtBQUdwQyxpQkFBUyxVQUFTLENBQU87SUFFckIsTUFBTSxDQUFDLElBQUksT0FBTyxDQUFDLFVBQVMsT0FBTyxFQUFFLE1BQU07UUFDdkMsSUFBSSxVQUFVLEdBQUcsS0FBSyxDQUFDO1FBRXZCLElBQUksSUFBSSxHQUFHLFVBQVUsQ0FBQztZQUNsQixFQUFFLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7Z0JBQ2QsTUFBTSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1lBQzVCLENBQUM7UUFDTCxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUE7UUFFVCxhQUFhLENBQUMsSUFBSSxDQUFDLFNBQVMsR0FBRyw4QkFBOEIsRUFDekQsVUFBUyxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU07WUFDMUIsVUFBVSxHQUFHLElBQUksQ0FBQztZQUNsQixZQUFZLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDbkIsRUFBRSxDQUFDLENBQUMsS0FBSyxJQUFJLEtBQUssS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDO2dCQUMxQixNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDbEIsQ0FBQztZQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO2dCQUNoQixNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDbkIsQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNKLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQ3JDLENBQUM7UUFFTCxDQUFDLENBQUMsQ0FBQztJQUlYLENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQyxDQUFDIiwiZmlsZSI6ImxpYi9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGNoaWxkX3Byb2Nlc3MgZnJvbSBcImNoaWxkX3Byb2Nlc3NcIjtcbmltcG9ydCAqIGFzIFByb21pc2UgZnJvbSBcImJsdWViaXJkXCI7XG5cblxuZXhwb3J0ID0gZnVuY3Rpb24oZTogdm9pZCkge1xuXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBsZXQgY2FsbGJhY2tlZCA9IGZhbHNlO1xuXG4gICAgICAgIGxldCB0aW1vID0gc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGlmICghY2FsbGJhY2tlZCkge1xuICAgICAgICAgICAgICAgIHJlamVjdChcInRpbWVvdXQgZXJyb3JcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIDIwMDAwKVxuXG4gICAgICAgIGNoaWxkX3Byb2Nlc3MuZXhlYyhfX2Rpcm5hbWUgKyBcIi8uLi9zY3JpcHRzL2xpbnV4L25ldHdvcmsuc2hcIixcbiAgICAgICAgICAgIGZ1bmN0aW9uKGVycm9yLCBzdGRvdXQsIHN0ZGVycikge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1vKTtcbiAgICAgICAgICAgICAgICBpZiAoZXJyb3IgJiYgZXJyb3IgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHN0ZGVycikge1xuICAgICAgICAgICAgICAgICAgICByZWplY3Qoc3RkZXJyKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKEpTT04ucGFyc2Uoc3Rkb3V0ICsgXCJcIikpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfSk7XG5cblxuXG4gICAgfSk7XG59O1xuXG5cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
